// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // set up the incremental step
    Inc16(in=loopoutput, out=outplusone);
    
    // start from last if, output is old output (loopout) if inct == 0
    // output is outplusone if inct == 1
    Mux16(a=loopoutput, b=outplusone, sel=inc, out=increased);
    
    // second from last if, output is increased if loadt == 0
    // output is in if loadt == 1
    Mux16(a=increased, b=in, sel=load, out=loaded);
    
    // first if, output is loaded if reset == 0; 0 if reset == 1
    Mux16(a=loaded, b=false, sel=reset, out=resetted);
    
    // 16 bit Register takes the output from above and gives output
    // also gives the loop output to feed back
    // remember that Register acts as memory, so needed if you want to do time steps
    // always load it
    Register(in=resetted, load=true, out=out, out=loopoutput);
}
