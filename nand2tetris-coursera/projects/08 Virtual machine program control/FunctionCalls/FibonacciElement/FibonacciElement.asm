@256 // code line 0
D=A // code line 1
@SP // code line 2
M=D // code line 3
@Sys.init return 0 // code line 4
D=A // code line 5
@SP // code line 6
A=M // code line 7
M=D // code line 8
@SP // code line 9
M=M+1 // code line 10
@LCL // code line 11
D=M // code line 12
@SP // code line 13
A=M // code line 14
M=D // code line 15
@SP // code line 16
M=M+1 // code line 17
@ARG // code line 18
D=M // code line 19
@SP // code line 20
A=M // code line 21
M=D // code line 22
@SP // code line 23
M=M+1 // code line 24
@THIS // code line 25
D=M // code line 26
@SP // code line 27
A=M // code line 28
M=D // code line 29
@SP // code line 30
M=M+1 // code line 31
@THAT // code line 32
D=M // code line 33
@SP // code line 34
A=M // code line 35
M=D // code line 36
@SP // code line 37
M=M+1 // code line 38
@SP // code line 39
D=M // code line 40
@5 // code line 41
D=D-A // code line 42
@ARG // code line 43
M=D // code line 44
@SP // code line 45
D=M // code line 46
@LCL // code line 47
M=D // code line 48
@Sys.init // code line 49
0;JMP // code line 50
(Sys.init return 0)
// function Main.fibonacci 0
(Main.fibonacci)
// push argument 0
@ARG // code line 51
D=M // code line 52
@0 // code line 53
A=D+A // code line 54
D=M // code line 55
@SP // code line 56
A=M // code line 57
M=D // code line 58
@SP // code line 59
M=M+1 // code line 60
// push constant 2
@2 // code line 61
D=A // code line 62
@SP // code line 63
A=M // code line 64
M=D // code line 65
@SP // code line 66
M=M+1 // code line 67
// lt
@SP // code line 68
M=M-1 // code line 69
A=M // code line 70
D=M // code line 71
A=A-1 // code line 72
D=M-D // code line 73
@BOOL0 // code line 74
D;JLT // code line 75
@SP // code line 76
A=M-1 // code line 77
M=0 // code line 78
@ENDBOOL0 // code line 79
0;JMP // code line 80
(BOOL0) // code line 81
@SP // code line 82
A=M-1 // code line 83
M=-1 // code line 84
(ENDBOOL0) // code line 85
// if-goto IF_TRUE
@SP // code line 86
M=M-1 // code line 87
A=M // code line 88
D=M // code line 89
@Main$IF_TRUE // code line 90
D;JNE // code line 91
// goto IF_FALSE
@Main$IF_FALSE // code line 92
0;JMP // code line 93
// label IF_TRUE
(Main$IF_TRUE)
// push argument 0
@ARG // code line 94
D=M // code line 95
@0 // code line 96
A=D+A // code line 97
D=M // code line 98
@SP // code line 99
A=M // code line 100
M=D // code line 101
@SP // code line 102
M=M+1 // code line 103
// return
@LCL // code line 104
D=M // code line 105
@R13 // code line 106
M=D // code line 107
@R13 // code line 108
D=M // code line 109
@5 // code line 110
D=D-A // code line 111
A=D // code line 112
D=M // code line 113
@R14 // code line 114
M=D // code line 115
@SP // code line 116
M=M-1 // code line 117
A=M // code line 118
D=M // code line 119
@ARG // code line 120
A=M // code line 121
M=D // code line 122
@ARG // code line 123
D=M // code line 124
@SP // code line 125
M=D+1 // code line 126
@R13 // code line 127
M=M-1 // code line 128
A=M // code line 129
D=M // code line 130
@THAT // code line 131
M=D // code line 132
@R13 // code line 133
M=M-1 // code line 134
A=M // code line 135
D=M // code line 136
@THIS // code line 137
M=D // code line 138
@R13 // code line 139
M=M-1 // code line 140
A=M // code line 141
D=M // code line 142
@ARG // code line 143
M=D // code line 144
@R13 // code line 145
M=M-1 // code line 146
A=M // code line 147
D=M // code line 148
@LCL // code line 149
M=D // code line 150
@R14 // code line 151
A=M // code line 152
0;JMP // code line 153
// label IF_FALSE
(Main$IF_FALSE)
// push argument 0
@ARG // code line 154
D=M // code line 155
@0 // code line 156
A=D+A // code line 157
D=M // code line 158
@SP // code line 159
A=M // code line 160
M=D // code line 161
@SP // code line 162
M=M+1 // code line 163
// push constant 2
@2 // code line 164
D=A // code line 165
@SP // code line 166
A=M // code line 167
M=D // code line 168
@SP // code line 169
M=M+1 // code line 170
// sub
@SP // code line 171
M=M-1 // code line 172
A=M // code line 173
D=M // code line 174
A=A-1 // code line 175
M=M-D // code line 176
// call Main.fibonacci 1
@Main.fibonacci return 1 // code line 177
D=A // code line 178
@SP // code line 179
A=M // code line 180
M=D // code line 181
@SP // code line 182
M=M+1 // code line 183
@LCL // code line 184
D=M // code line 185
@SP // code line 186
A=M // code line 187
M=D // code line 188
@SP // code line 189
M=M+1 // code line 190
@ARG // code line 191
D=M // code line 192
@SP // code line 193
A=M // code line 194
M=D // code line 195
@SP // code line 196
M=M+1 // code line 197
@THIS // code line 198
D=M // code line 199
@SP // code line 200
A=M // code line 201
M=D // code line 202
@SP // code line 203
M=M+1 // code line 204
@THAT // code line 205
D=M // code line 206
@SP // code line 207
A=M // code line 208
M=D // code line 209
@SP // code line 210
M=M+1 // code line 211
@SP // code line 212
D=M // code line 213
@6 // code line 214
D=D-A // code line 215
@ARG // code line 216
M=D // code line 217
@SP // code line 218
D=M // code line 219
@LCL // code line 220
M=D // code line 221
@Main.fibonacci // code line 222
0;JMP // code line 223
(Main.fibonacci return 1)
// push argument 0
@ARG // code line 224
D=M // code line 225
@0 // code line 226
A=D+A // code line 227
D=M // code line 228
@SP // code line 229
A=M // code line 230
M=D // code line 231
@SP // code line 232
M=M+1 // code line 233
// push constant 1
@1 // code line 234
D=A // code line 235
@SP // code line 236
A=M // code line 237
M=D // code line 238
@SP // code line 239
M=M+1 // code line 240
// sub
@SP // code line 241
M=M-1 // code line 242
A=M // code line 243
D=M // code line 244
A=A-1 // code line 245
M=M-D // code line 246
// call Main.fibonacci 1
@Main.fibonacci return 2 // code line 247
D=A // code line 248
@SP // code line 249
A=M // code line 250
M=D // code line 251
@SP // code line 252
M=M+1 // code line 253
@LCL // code line 254
D=M // code line 255
@SP // code line 256
A=M // code line 257
M=D // code line 258
@SP // code line 259
M=M+1 // code line 260
@ARG // code line 261
D=M // code line 262
@SP // code line 263
A=M // code line 264
M=D // code line 265
@SP // code line 266
M=M+1 // code line 267
@THIS // code line 268
D=M // code line 269
@SP // code line 270
A=M // code line 271
M=D // code line 272
@SP // code line 273
M=M+1 // code line 274
@THAT // code line 275
D=M // code line 276
@SP // code line 277
A=M // code line 278
M=D // code line 279
@SP // code line 280
M=M+1 // code line 281
@SP // code line 282
D=M // code line 283
@6 // code line 284
D=D-A // code line 285
@ARG // code line 286
M=D // code line 287
@SP // code line 288
D=M // code line 289
@LCL // code line 290
M=D // code line 291
@Main.fibonacci // code line 292
0;JMP // code line 293
(Main.fibonacci return 2)
// add
@SP // code line 294
M=M-1 // code line 295
A=M // code line 296
D=M // code line 297
A=A-1 // code line 298
M=M+D // code line 299
// return
@LCL // code line 300
D=M // code line 301
@R13 // code line 302
M=D // code line 303
@R13 // code line 304
D=M // code line 305
@5 // code line 306
D=D-A // code line 307
A=D // code line 308
D=M // code line 309
@R14 // code line 310
M=D // code line 311
@SP // code line 312
M=M-1 // code line 313
A=M // code line 314
D=M // code line 315
@ARG // code line 316
A=M // code line 317
M=D // code line 318
@ARG // code line 319
D=M // code line 320
@SP // code line 321
M=D+1 // code line 322
@R13 // code line 323
M=M-1 // code line 324
A=M // code line 325
D=M // code line 326
@THAT // code line 327
M=D // code line 328
@R13 // code line 329
M=M-1 // code line 330
A=M // code line 331
D=M // code line 332
@THIS // code line 333
M=D // code line 334
@R13 // code line 335
M=M-1 // code line 336
A=M // code line 337
D=M // code line 338
@ARG // code line 339
M=D // code line 340
@R13 // code line 341
M=M-1 // code line 342
A=M // code line 343
D=M // code line 344
@LCL // code line 345
M=D // code line 346
@R14 // code line 347
A=M // code line 348
0;JMP // code line 349
// function Sys.init 0
(Sys.init)
// push constant 4
@4 // code line 350
D=A // code line 351
@SP // code line 352
A=M // code line 353
M=D // code line 354
@SP // code line 355
M=M+1 // code line 356
// call Main.fibonacci 1
@Main.fibonacci return 3 // code line 357
D=A // code line 358
@SP // code line 359
A=M // code line 360
M=D // code line 361
@SP // code line 362
M=M+1 // code line 363
@LCL // code line 364
D=M // code line 365
@SP // code line 366
A=M // code line 367
M=D // code line 368
@SP // code line 369
M=M+1 // code line 370
@ARG // code line 371
D=M // code line 372
@SP // code line 373
A=M // code line 374
M=D // code line 375
@SP // code line 376
M=M+1 // code line 377
@THIS // code line 378
D=M // code line 379
@SP // code line 380
A=M // code line 381
M=D // code line 382
@SP // code line 383
M=M+1 // code line 384
@THAT // code line 385
D=M // code line 386
@SP // code line 387
A=M // code line 388
M=D // code line 389
@SP // code line 390
M=M+1 // code line 391
@SP // code line 392
D=M // code line 393
@6 // code line 394
D=D-A // code line 395
@ARG // code line 396
M=D // code line 397
@SP // code line 398
D=M // code line 399
@LCL // code line 400
M=D // code line 401
@Main.fibonacci // code line 402
0;JMP // code line 403
(Main.fibonacci return 3)
// label WHILE
(Sys$WHILE)
// goto WHILE
@Sys$WHILE // code line 404
0;JMP // code line 405
