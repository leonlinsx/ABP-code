@256 // code line 0
D=A // code line 1
@SP // code line 2
M=D // code line 3
@Sys.init return 0 // code line 4
D=A // code line 5
@SP // code line 6
A=M // code line 7
M=D // code line 8
@SP // code line 9
M=M+1 // code line 10
@LCL // code line 11
D=M // code line 12
@SP // code line 13
A=M // code line 14
M=D // code line 15
@SP // code line 16
M=M+1 // code line 17
@ARG // code line 18
D=M // code line 19
@SP // code line 20
A=M // code line 21
M=D // code line 22
@SP // code line 23
M=M+1 // code line 24
@THIS // code line 25
D=M // code line 26
@SP // code line 27
A=M // code line 28
M=D // code line 29
@SP // code line 30
M=M+1 // code line 31
@THAT // code line 32
D=M // code line 33
@SP // code line 34
A=M // code line 35
M=D // code line 36
@SP // code line 37
M=M+1 // code line 38
@SP // code line 39
D=M // code line 40
@5 // code line 41
D=D-A // code line 42
@ARG // code line 43
M=D // code line 44
@SP // code line 45
D=M // code line 46
@LCL // code line 47
M=D // code line 48
@Sys.init // code line 49
0;JMP // code line 50
(Sys.init return 0)
// function Class1.set 0
(Class1.set)
// push argument 0
@ARG // code line 51
D=M // code line 52
@0 // code line 53
A=D+A // code line 54
D=M // code line 55
@SP // code line 56
A=M // code line 57
M=D // code line 58
@SP // code line 59
M=M+1 // code line 60
// pop static 0
@Class1.0 // code line 61
D=A // code line 62
@R13 // code line 63
M=D // code line 64
@SP // code line 65
M=M-1 // code line 66
A=M // code line 67
D=M // code line 68
@R13 // code line 69
A=M // code line 70
M=D // code line 71
// push argument 1
@ARG // code line 72
D=M // code line 73
@1 // code line 74
A=D+A // code line 75
D=M // code line 76
@SP // code line 77
A=M // code line 78
M=D // code line 79
@SP // code line 80
M=M+1 // code line 81
// pop static 1
@Class1.1 // code line 82
D=A // code line 83
@R13 // code line 84
M=D // code line 85
@SP // code line 86
M=M-1 // code line 87
A=M // code line 88
D=M // code line 89
@R13 // code line 90
A=M // code line 91
M=D // code line 92
// push constant 0
@0 // code line 93
D=A // code line 94
@SP // code line 95
A=M // code line 96
M=D // code line 97
@SP // code line 98
M=M+1 // code line 99
// return
@LCL // code line 100
D=M // code line 101
@R13 // code line 102
M=D // code line 103
@R13 // code line 104
D=M // code line 105
@5 // code line 106
D=D-A // code line 107
A=D // code line 108
D=M // code line 109
@R14 // code line 110
M=D // code line 111
@SP // code line 112
M=M-1 // code line 113
A=M // code line 114
D=M // code line 115
@ARG // code line 116
A=M // code line 117
M=D // code line 118
@ARG // code line 119
D=M // code line 120
@SP // code line 121
M=D+1 // code line 122
@R13 // code line 123
M=M-1 // code line 124
A=M // code line 125
D=M // code line 126
@THAT // code line 127
M=D // code line 128
@R13 // code line 129
M=M-1 // code line 130
A=M // code line 131
D=M // code line 132
@THIS // code line 133
M=D // code line 134
@R13 // code line 135
M=M-1 // code line 136
A=M // code line 137
D=M // code line 138
@ARG // code line 139
M=D // code line 140
@R13 // code line 141
M=M-1 // code line 142
A=M // code line 143
D=M // code line 144
@LCL // code line 145
M=D // code line 146
@R14 // code line 147
A=M // code line 148
0;JMP // code line 149
// function Class1.get 0
(Class1.get)
// push static 0
@Class1.0 // code line 150
D=M // code line 151
@SP // code line 152
A=M // code line 153
M=D // code line 154
@SP // code line 155
M=M+1 // code line 156
// push static 1
@Class1.1 // code line 157
D=M // code line 158
@SP // code line 159
A=M // code line 160
M=D // code line 161
@SP // code line 162
M=M+1 // code line 163
// sub
@SP // code line 164
M=M-1 // code line 165
A=M // code line 166
D=M // code line 167
A=A-1 // code line 168
M=M-D // code line 169
// return
@LCL // code line 170
D=M // code line 171
@R13 // code line 172
M=D // code line 173
@R13 // code line 174
D=M // code line 175
@5 // code line 176
D=D-A // code line 177
A=D // code line 178
D=M // code line 179
@R14 // code line 180
M=D // code line 181
@SP // code line 182
M=M-1 // code line 183
A=M // code line 184
D=M // code line 185
@ARG // code line 186
A=M // code line 187
M=D // code line 188
@ARG // code line 189
D=M // code line 190
@SP // code line 191
M=D+1 // code line 192
@R13 // code line 193
M=M-1 // code line 194
A=M // code line 195
D=M // code line 196
@THAT // code line 197
M=D // code line 198
@R13 // code line 199
M=M-1 // code line 200
A=M // code line 201
D=M // code line 202
@THIS // code line 203
M=D // code line 204
@R13 // code line 205
M=M-1 // code line 206
A=M // code line 207
D=M // code line 208
@ARG // code line 209
M=D // code line 210
@R13 // code line 211
M=M-1 // code line 212
A=M // code line 213
D=M // code line 214
@LCL // code line 215
M=D // code line 216
@R14 // code line 217
A=M // code line 218
0;JMP // code line 219
// function Class2.set 0
(Class2.set)
// push argument 0
@ARG // code line 220
D=M // code line 221
@0 // code line 222
A=D+A // code line 223
D=M // code line 224
@SP // code line 225
A=M // code line 226
M=D // code line 227
@SP // code line 228
M=M+1 // code line 229
// pop static 0
@Class2.0 // code line 230
D=A // code line 231
@R13 // code line 232
M=D // code line 233
@SP // code line 234
M=M-1 // code line 235
A=M // code line 236
D=M // code line 237
@R13 // code line 238
A=M // code line 239
M=D // code line 240
// push argument 1
@ARG // code line 241
D=M // code line 242
@1 // code line 243
A=D+A // code line 244
D=M // code line 245
@SP // code line 246
A=M // code line 247
M=D // code line 248
@SP // code line 249
M=M+1 // code line 250
// pop static 1
@Class2.1 // code line 251
D=A // code line 252
@R13 // code line 253
M=D // code line 254
@SP // code line 255
M=M-1 // code line 256
A=M // code line 257
D=M // code line 258
@R13 // code line 259
A=M // code line 260
M=D // code line 261
// push constant 0
@0 // code line 262
D=A // code line 263
@SP // code line 264
A=M // code line 265
M=D // code line 266
@SP // code line 267
M=M+1 // code line 268
// return
@LCL // code line 269
D=M // code line 270
@R13 // code line 271
M=D // code line 272
@R13 // code line 273
D=M // code line 274
@5 // code line 275
D=D-A // code line 276
A=D // code line 277
D=M // code line 278
@R14 // code line 279
M=D // code line 280
@SP // code line 281
M=M-1 // code line 282
A=M // code line 283
D=M // code line 284
@ARG // code line 285
A=M // code line 286
M=D // code line 287
@ARG // code line 288
D=M // code line 289
@SP // code line 290
M=D+1 // code line 291
@R13 // code line 292
M=M-1 // code line 293
A=M // code line 294
D=M // code line 295
@THAT // code line 296
M=D // code line 297
@R13 // code line 298
M=M-1 // code line 299
A=M // code line 300
D=M // code line 301
@THIS // code line 302
M=D // code line 303
@R13 // code line 304
M=M-1 // code line 305
A=M // code line 306
D=M // code line 307
@ARG // code line 308
M=D // code line 309
@R13 // code line 310
M=M-1 // code line 311
A=M // code line 312
D=M // code line 313
@LCL // code line 314
M=D // code line 315
@R14 // code line 316
A=M // code line 317
0;JMP // code line 318
// function Class2.get 0
(Class2.get)
// push static 0
@Class2.0 // code line 319
D=M // code line 320
@SP // code line 321
A=M // code line 322
M=D // code line 323
@SP // code line 324
M=M+1 // code line 325
// push static 1
@Class2.1 // code line 326
D=M // code line 327
@SP // code line 328
A=M // code line 329
M=D // code line 330
@SP // code line 331
M=M+1 // code line 332
// sub
@SP // code line 333
M=M-1 // code line 334
A=M // code line 335
D=M // code line 336
A=A-1 // code line 337
M=M-D // code line 338
// return
@LCL // code line 339
D=M // code line 340
@R13 // code line 341
M=D // code line 342
@R13 // code line 343
D=M // code line 344
@5 // code line 345
D=D-A // code line 346
A=D // code line 347
D=M // code line 348
@R14 // code line 349
M=D // code line 350
@SP // code line 351
M=M-1 // code line 352
A=M // code line 353
D=M // code line 354
@ARG // code line 355
A=M // code line 356
M=D // code line 357
@ARG // code line 358
D=M // code line 359
@SP // code line 360
M=D+1 // code line 361
@R13 // code line 362
M=M-1 // code line 363
A=M // code line 364
D=M // code line 365
@THAT // code line 366
M=D // code line 367
@R13 // code line 368
M=M-1 // code line 369
A=M // code line 370
D=M // code line 371
@THIS // code line 372
M=D // code line 373
@R13 // code line 374
M=M-1 // code line 375
A=M // code line 376
D=M // code line 377
@ARG // code line 378
M=D // code line 379
@R13 // code line 380
M=M-1 // code line 381
A=M // code line 382
D=M // code line 383
@LCL // code line 384
M=D // code line 385
@R14 // code line 386
A=M // code line 387
0;JMP // code line 388
// function Sys.init 0
(Sys.init)
// push constant 6
@6 // code line 389
D=A // code line 390
@SP // code line 391
A=M // code line 392
M=D // code line 393
@SP // code line 394
M=M+1 // code line 395
// push constant 8
@8 // code line 396
D=A // code line 397
@SP // code line 398
A=M // code line 399
M=D // code line 400
@SP // code line 401
M=M+1 // code line 402
// call Class1.set 2
@Class1.set return 1 // code line 403
D=A // code line 404
@SP // code line 405
A=M // code line 406
M=D // code line 407
@SP // code line 408
M=M+1 // code line 409
@LCL // code line 410
D=M // code line 411
@SP // code line 412
A=M // code line 413
M=D // code line 414
@SP // code line 415
M=M+1 // code line 416
@ARG // code line 417
D=M // code line 418
@SP // code line 419
A=M // code line 420
M=D // code line 421
@SP // code line 422
M=M+1 // code line 423
@THIS // code line 424
D=M // code line 425
@SP // code line 426
A=M // code line 427
M=D // code line 428
@SP // code line 429
M=M+1 // code line 430
@THAT // code line 431
D=M // code line 432
@SP // code line 433
A=M // code line 434
M=D // code line 435
@SP // code line 436
M=M+1 // code line 437
@SP // code line 438
D=M // code line 439
@7 // code line 440
D=D-A // code line 441
@ARG // code line 442
M=D // code line 443
@SP // code line 444
D=M // code line 445
@LCL // code line 446
M=D // code line 447
@Class1.set // code line 448
0;JMP // code line 449
(Class1.set return 1)
// pop temp 0
@R5 // code line 450
D=A // code line 451
@R13 // code line 452
M=D // code line 453
@SP // code line 454
M=M-1 // code line 455
A=M // code line 456
D=M // code line 457
@R13 // code line 458
A=M // code line 459
M=D // code line 460
// push constant 23
@23 // code line 461
D=A // code line 462
@SP // code line 463
A=M // code line 464
M=D // code line 465
@SP // code line 466
M=M+1 // code line 467
// push constant 15
@15 // code line 468
D=A // code line 469
@SP // code line 470
A=M // code line 471
M=D // code line 472
@SP // code line 473
M=M+1 // code line 474
// call Class2.set 2
@Class2.set return 2 // code line 475
D=A // code line 476
@SP // code line 477
A=M // code line 478
M=D // code line 479
@SP // code line 480
M=M+1 // code line 481
@LCL // code line 482
D=M // code line 483
@SP // code line 484
A=M // code line 485
M=D // code line 486
@SP // code line 487
M=M+1 // code line 488
@ARG // code line 489
D=M // code line 490
@SP // code line 491
A=M // code line 492
M=D // code line 493
@SP // code line 494
M=M+1 // code line 495
@THIS // code line 496
D=M // code line 497
@SP // code line 498
A=M // code line 499
M=D // code line 500
@SP // code line 501
M=M+1 // code line 502
@THAT // code line 503
D=M // code line 504
@SP // code line 505
A=M // code line 506
M=D // code line 507
@SP // code line 508
M=M+1 // code line 509
@SP // code line 510
D=M // code line 511
@7 // code line 512
D=D-A // code line 513
@ARG // code line 514
M=D // code line 515
@SP // code line 516
D=M // code line 517
@LCL // code line 518
M=D // code line 519
@Class2.set // code line 520
0;JMP // code line 521
(Class2.set return 2)
// pop temp 0
@R5 // code line 522
D=A // code line 523
@R13 // code line 524
M=D // code line 525
@SP // code line 526
M=M-1 // code line 527
A=M // code line 528
D=M // code line 529
@R13 // code line 530
A=M // code line 531
M=D // code line 532
// call Class1.get 0
@Class1.get return 3 // code line 533
D=A // code line 534
@SP // code line 535
A=M // code line 536
M=D // code line 537
@SP // code line 538
M=M+1 // code line 539
@LCL // code line 540
D=M // code line 541
@SP // code line 542
A=M // code line 543
M=D // code line 544
@SP // code line 545
M=M+1 // code line 546
@ARG // code line 547
D=M // code line 548
@SP // code line 549
A=M // code line 550
M=D // code line 551
@SP // code line 552
M=M+1 // code line 553
@THIS // code line 554
D=M // code line 555
@SP // code line 556
A=M // code line 557
M=D // code line 558
@SP // code line 559
M=M+1 // code line 560
@THAT // code line 561
D=M // code line 562
@SP // code line 563
A=M // code line 564
M=D // code line 565
@SP // code line 566
M=M+1 // code line 567
@SP // code line 568
D=M // code line 569
@5 // code line 570
D=D-A // code line 571
@ARG // code line 572
M=D // code line 573
@SP // code line 574
D=M // code line 575
@LCL // code line 576
M=D // code line 577
@Class1.get // code line 578
0;JMP // code line 579
(Class1.get return 3)
// call Class2.get 0
@Class2.get return 4 // code line 580
D=A // code line 581
@SP // code line 582
A=M // code line 583
M=D // code line 584
@SP // code line 585
M=M+1 // code line 586
@LCL // code line 587
D=M // code line 588
@SP // code line 589
A=M // code line 590
M=D // code line 591
@SP // code line 592
M=M+1 // code line 593
@ARG // code line 594
D=M // code line 595
@SP // code line 596
A=M // code line 597
M=D // code line 598
@SP // code line 599
M=M+1 // code line 600
@THIS // code line 601
D=M // code line 602
@SP // code line 603
A=M // code line 604
M=D // code line 605
@SP // code line 606
M=M+1 // code line 607
@THAT // code line 608
D=M // code line 609
@SP // code line 610
A=M // code line 611
M=D // code line 612
@SP // code line 613
M=M+1 // code line 614
@SP // code line 615
D=M // code line 616
@5 // code line 617
D=D-A // code line 618
@ARG // code line 619
M=D // code line 620
@SP // code line 621
D=M // code line 622
@LCL // code line 623
M=D // code line 624
@Class2.get // code line 625
0;JMP // code line 626
(Class2.get return 4)
// label WHILE
(Sys$WHILE)
// goto WHILE
@Sys$WHILE // code line 627
0;JMP // code line 628
