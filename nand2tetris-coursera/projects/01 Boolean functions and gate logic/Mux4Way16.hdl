// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 * Mux(a, b, sel[0]) gives a if sel[0] is 0, b otherwise
 * Mux(c, d, sel[0]) gives c if sel[0] is 0, d otherwise
 * remember we're reading right to left, so this is the 0101 on the right hand side
 * Mux() on the result of both with sel[1]
 * gives a if sel[0] is 0, sel[1] is 0
 * gives b if sel[0] is 1, sel[1] is 0
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux16(a=a, b=b, sel=sel[0], out=Mux16ab);
    Mux16(a=c, b=d, sel=sel[0], out=Mux16cd);
    Mux16(a=Mux16ab, b=Mux16cd, sel=sel[1], out=out);
}